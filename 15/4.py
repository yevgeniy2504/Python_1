# üìå–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Ç–µ–∫—Å—Ç –≤–∏–¥–∞: ‚Äú1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è‚Äù, ‚Äú3-
# —è —Å—Ä–µ–¥–∞ –º–∞—è‚Äù –∏ —Ç.–ø.
# üìå–ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –µ–≥–æ –≤ –¥–∞—Ç—É –≤ —Ç–µ–∫—É—â–µ–º –≥–æ–¥—É.
# üìå–õ–æ–≥–∏—Ä—É–π—Ç–µ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.


import logging
from datetime import datetime, timedelta, date


FORMAT = "{levelname} - {asctime}: {msg}"
logging.basicConfig(
    format=FORMAT,
    filename="log.log",
    encoding='utf-8',
    style='{',
    level=logging.ERROR
)

logger = logging.getLogger(__name__)

WEEKS = {"–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫": 0,
         "–≤—Ç–æ—Ä–Ω–∏–∫": 1,
         "—Å—Ä–µ–¥–∞": 2,
         "—á–µ—Ç–≤–µ—Ä–≥": 3,
         "–ø—è—Ç–Ω–∏—Ü–∞": 4,
         "—Å—É–±–±–æ—Ç–∞": 5,
         "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ": 6}

MONTHS = {"—è–Ω–≤–∞—Ä—è": 1,
          "—Ñ–µ–≤—Ä–∞–ª—è": 2,
          "–º–∞—Ä—Ç–∞": 3,
          "–∞–ø—Ä–µ–ª—è": 4,
          "–º–∞—è": 5,
          "–∏—é–Ω—è": 6,
          "–∏—é–ª—è": 7,
          "–∞–≤–≥—É—Å—Ç–∞": 8,
          "—Å–µ–Ω—Ç—è–±—Ä—è": 9,
          "–æ–∫—Ç—è–±—Ä—è": 10,
          "–Ω–æ—è–±—Ä—è": 11,
          "–¥–µ–∫–∞–±—Ä—è": 12}


def parse_date(income_date):
    try:
        current_year = datetime.now().year
        start_date = date(year=current_year, month=1, day=1)
        data_set = income_date.split(" ")
        weeks_ = int(data_set[0].split("-")[0])
        days = WEEKS[data_set[1]]
        months_ = MONTHS[data_set[2]]
        delta = timedelta(weeks=weeks_, days=days, month=months_)
        date_ = start_date + delta
        return date_
    except (ValueError, KeyError) as e:
        logger.error(f"Failed to parse date: {income_date}. Error: {str(e)}")
        return None


if __name__ == '__main__':
    texts = ["1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è", "3-—è —Å—Ä–µ–¥–∞ –º–∞—è", "29-–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –∏—é–Ω—è"]
    for text in texts:
        parsed_date = parse_date(text)
        if parsed_date:
            print(f"Text: {text}, Parsed Date: {parsed_date}")
        else:
            print(f"Text: {text}, Failed to parse date")
