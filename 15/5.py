# üìå–î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–¥–∞—á—É 4.
# üìå–î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏.
# üìå–ü—Ä–∏ —ç—Ç–æ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ª—é–±–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–æ–∂–Ω–æ –æ–ø—É—Å—Ç–∏—Ç—å. –í
# —ç—Ç–æ–º —Å–ª—É—á–∞–µ –±–µ—Ä—ë—Ç—Å—è –ø–µ—Ä–≤—ã–π –≤ –º–µ—Å—è—Ü–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, —Ç–µ–∫—É—â–∏–π
# –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∏/–∏–ª–∏ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü.
# üìå*–ù–∞—É—á–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ
# –Ω–∞–∑–≤–∞–Ω–∏—è –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –∏ –º–µ—Å—è—Ü–∞, –Ω–æ –∏ —á–∏—Å–ª–æ–≤—ã–µ,
# —Ç.–µ –Ω–µ –º–∞—è, –∞ 5.

import logging
import sys
from datetime import datetime, timedelta, date

FORMAT = "{levelname} - {asctime}: {msg}"
logging.basicConfig(
    format=FORMAT,
    filename="log.log",
    encoding='utf-8',
    style='{',
    level=logging.ERROR
)

logger = logging.getLogger(__name__)

WEEKS = {"–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫": 0,
         "–≤—Ç–æ—Ä–Ω–∏–∫": 1,
         "—Å—Ä–µ–¥–∞": 2,
         "—á–µ—Ç–≤–µ—Ä–≥": 3,
         "–ø—è—Ç–Ω–∏—Ü–∞": 4,
         "—Å—É–±–±–æ—Ç–∞": 5,
         "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ": 6,
         "1": 0,
         "2": 1,
         "3": 2,
         "4": 3,
         "5": 4,
         "6": 5,
         "7": 6}

MONTHS = {"—è–Ω–≤–∞—Ä—è": 1,
          "—Ñ–µ–≤—Ä–∞–ª—è": 2,
          "–º–∞—Ä—Ç–∞": 3,
          "–∞–ø—Ä–µ–ª—è": 4,
          "–º–∞—è": 5,
          "–∏—é–Ω—è": 6,
          "–∏—é–ª—è": 7,
          "–∞–≤–≥—É—Å—Ç–∞": 8,
          "—Å–µ–Ω—Ç—è–±—Ä—è": 9,
          "–æ–∫—Ç—è–±—Ä—è": 10,
          "–Ω–æ—è–±—Ä—è": 11,
          "–¥–µ–∫–∞–±—Ä—è": 12,
          "1": 1,
          "2": 2,
          "3": 3,
          "4": 4,
          "5": 5,
          "6": 6,
          "7": 7,
          "8": 8,
          "9": 9,
          "10": 10,
          "11": 11,
          "12": 12}


def parse_date(income_date):
    try:
        current_year = datetime.now().year
        start_date = date(year=current_year, month=1, day=1)
        data_set = income_date.split(" ")
        weeks_ = int(data_set[0].split("-")[0])
        days = WEEKS.get(data_set[1].lower())
        months_ = MONTHS.get(data_set[2].lower())
        delta = timedelta(weeks=weeks_, days=days)
        date_ = start_date + delta
        return date_
    except (ValueError, KeyError) as e:
        logger.error(f"Failed to parse date: {income_date}. Error: {str(e)}")
        return None


if __name__ == '__main__':
    if len(sys.argv) > 1:
        texts = sys.argv[1:]
    else:
        texts = ["1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è", "3-—è —Å—Ä–µ–¥–∞ –º–∞—è", "29-–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –∏—é–Ω—è"]

    for text in texts:
        parsed_date = parse_date(text)
        if parsed_date:
            print(f"Text: {text}, Parsed Date: {parsed_date}")
        else:
            print(f"Text: {text}, Failed to parse date")